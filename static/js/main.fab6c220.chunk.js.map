{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","components/AnimeListItem/index.js","components/AnimeListItem/AnimeListItem.js","contexts/AnimeServiceContext.js","hooks/AnimeServiceWrap.js","components/FilterCheckbox/FilterCheckbox.js","components/FilterCheckbox/index.js","components/Preloader/index.js","components/Preloader/Preloader.js","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.js","components/AnimeList/AnimeList.js","actions/index.js","hooks/useWindowSize.js","utils/constants.js","components/AnimeList/index.js","components/App/index.js","components/App/App.js","components/ErrorCatch/ErrorCatch.js","components/ErrorCatch/index.js","services/AnimeService.js","reducers/index.js","store.js","index.js"],"names":["Header","className","AnimeListItem","anime","animeAddedLike","animeRemoveLike","animeRemove","attributes","canonicalTitle","isLiked","type","onClick","id","src","posterImage","medium","alt","React","createContext","AnimeServiceProvider","Provider","AnimeServiceConsumer","Consumer","AnimeServiceWrap","Wrapped","props","animeService","FilterCheckbox","animeFilterCollection","animeDelFilterCollection","useState","isChecked","setChecked","name","checked","onChange","e","target","Preloader","ErrorIndicator","mapDispatchToProps","animeLoaded","newAnime","payload","animeError","error","animeQuantity","count","animeAddCards","animeId","like","animeCollectionRemove","connect","animeList","loading","quantity","cards","isOnCollection","filterLikeAnimeList","size","setSize","useEffect","updateSize","window","innerWidth","addEventListener","removeEventListener","useWindowSize","incr","getAnimeList","then","res","data","catch","err","slice","map","length","AnimeList","App","role","ErrorCatch","state","hasError","this","setState","children","Component","AnimeService","fetch","headers","ok","json","Promise","reject","status","initialState","reducer","action","animeLiked","find","i","itemId","newAnimeList","filter","_id","newfilterLikeAnimeList","filterAnimeList","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.fab6c220.chunk.js","sourcesContent":["import Header from './Header';\n\nexport default Header;","import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header className='header'>\n      <h1 className='header__title'>Собери свою коллекцию аниме</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import AnimeListItem from './AnimeListItem';\n\nexport default AnimeListItem;\n","import React from 'react';\nimport './AnimeListItem.css';\n\nconst AnimeListItem = ({\n  anime,\n  animeAddedLike,\n  animeRemoveLike,\n  animeRemove,\n}) => {\n  const { attributes } = anime;\n  return (\n    <li className='card'>\n      <div className='card__info-container'>\n        <div className='card__header-container'>\n          <div className='card__info'>\n            <h3 className='card__name'>{attributes.canonicalTitle}</h3>\n          </div>\n          <div className='card__buttons-container'>\n            <button\n              className={\n                anime.isLiked\n                  ? 'card__like-button card__like-button_active'\n                  : 'card__like-button'\n              }\n              type='button'\n              aria-label='Кнопка для лайков'\n              onClick={\n                anime.isLiked\n                  ? () => animeRemoveLike(anime.id)\n                  : () => animeAddedLike(anime.id)\n              }\n            ></button>\n            {!anime.isLiked && (\n              <button\n                className='card__remove-button'\n                type='button'\n                aria-label='Кнопка для Удаления'\n                onClick={() => animeRemove(anime.id)}\n              />\n            )}\n          </div>\n        </div>\n        <img\n          className='card__image'\n          src={attributes.posterImage.medium}\n          alt='Картинка'\n        />\n      </div>\n    </li>\n  );\n};\n\nexport default AnimeListItem;\n","import React from 'react';\n\nconst {\n  Provider: AnimeServiceProvider,\n  Consumer: AnimeServiceConsumer\n} = React.createContext();\n\nexport {\n  AnimeServiceProvider,\n  AnimeServiceConsumer\n};\n","import React from 'react';\nimport { AnimeServiceConsumer } from '../contexts';\n\nconst AnimeServiceWrap = () => (Wrapped) => {\n  return (props) => {\n    return (\n      <AnimeServiceConsumer>\n        {(animeService) => {\n          return <Wrapped {...props} animeService={animeService} />;\n        }}\n      </AnimeServiceConsumer>\n    );\n  };\n};\n\nexport default AnimeServiceWrap;\n","import React, { useState } from 'react';\r\nimport './FilterCheckbox.css';\r\n\r\nfunction FilterCheckbox({ animeFilterCollection, animeDelFilterCollection }) {\r\n  const [isChecked, setChecked] = useState(false);\r\n  function onChange(event) {\r\n    setChecked(event.target.checked);\r\n    isChecked ? animeDelFilterCollection() : animeFilterCollection();\r\n  }\r\n  return (\r\n    <div className='filter-checkbox'>\r\n      <label className='filter-checkbox__label'>\r\n        <input\r\n          type='checkbox'\r\n          className='filter-checkbox__input'\r\n          name='filterCheckbox'\r\n          id='filterCheckbox'\r\n          checked={isChecked}\r\n          onChange={(e) => onChange(e)}\r\n        />\r\n        <span className='filter-checkbox-visible'></span>\r\n      </label>\r\n      <p className='filter__title'>Коллекция</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterCheckbox;\r\n","import FilterCheckbox from './FilterCheckbox';\n\nexport default FilterCheckbox;","import Preloader from './Preloader';\n\nexport default Preloader;\n","import React from 'react';\r\nimport './Preloader.css';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='preloader'>\r\n      <div className='preloader__container'>\r\n        <span className='preloader__round'></span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import ErrorIndicator from './ErrorIndicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './ErrorIndicator.css';\n\nconst ErrorIndicator = () => {\n  return (\n    <div className='error'>\n      <h2 className='error__title'>Error!</h2>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;\n","import React, { useEffect } from 'react';\nimport AnimeListItem from '../AnimeListItem';\nimport { connect } from 'react-redux';\n\nimport './AnimeList.css';\nimport { AnimeServiceWrap, useWindowSize } from '../../hooks';\nimport {\n  animeLoaded,\n  animeError,\n  animeQuantity,\n  animeAddCards,\n  animeAddedLike,\n  animeRemoveLike,\n  animeRemove,\n  animeFilterCollection,\n  animeDelFilterCollection,\n  animeCollectionRemove,\n} from '../../actions';\nimport FilterCheckbox from '../FilterCheckbox/';\nimport Preloader from '../Preloader';\nimport ErrorIndicator from '../ErrorIndicator/';\n\nimport {\n  LARGE_SCREEN,\n  NARROW_SCREEN,\n  LARGE_SCREEN_MOVIES,\n  LARGE_SCREEN_MOVIES_MORE,\n  MEDIUM_SCREEN_MOVIES,\n  MEDIUM_SCREEN_MOVIES_MORE,\n  NARROW_SCREEN_MOVIES,\n  NARROW_SCREEN_MOVIES_MORE,\n} from '../../utils/constants';\n\nexport function AnimeList(props) {\n  const size = useWindowSize();\n  const {\n    animeQuantity,\n    animeAddCards,\n    animeAddedLike,\n    animeRemoveLike,\n    animeRemove,\n    animeFilterCollection,\n    animeDelFilterCollection,\n    animeCollectionRemove,\n  } = props;\n\n  function incr() {\n    animeQuantity(quantity + cards);\n  }\n\n  useEffect(() => {\n    function getSize() {\n      if (size >= LARGE_SCREEN) {\n        animeQuantity(LARGE_SCREEN_MOVIES);\n        animeAddCards(LARGE_SCREEN_MOVIES_MORE);\n      }\n      if (size < LARGE_SCREEN && size > NARROW_SCREEN) {\n        animeQuantity(MEDIUM_SCREEN_MOVIES);\n        animeAddCards(MEDIUM_SCREEN_MOVIES_MORE);\n      }\n      if (size <= NARROW_SCREEN) {\n        animeQuantity(NARROW_SCREEN_MOVIES);\n        animeAddCards(NARROW_SCREEN_MOVIES_MORE);\n      }\n    }\n    getSize();\n  }, [size]);\n\n  useEffect(() => {\n    const { animeService, animeLoaded, animeError } = props;\n    animeService\n      .getAnimeList()\n      .then((res) => animeLoaded(res.data))\n      .catch((err) => animeError(err));\n  }, []);\n\n  const {\n    animeList,\n    loading,\n    error,\n    quantity,\n    cards,\n    isOnCollection,\n    filterLikeAnimeList,\n  } = props;\n\n  return (\n    <main className='content'>\n      <div className='content__checkbox-container'>\n        <FilterCheckbox\n          animeFilterCollection={animeFilterCollection}\n          animeDelFilterCollection={animeDelFilterCollection}\n        />\n      </div>\n      {loading && <Preloader />}\n      {error && <ErrorIndicator />}\n      <ul className='anime-list'>\n        {isOnCollection\n          ? filterLikeAnimeList.slice(0, quantity).map((anime) => (\n              <AnimeListItem\n                key={anime.id}\n                anime={anime}\n                animeAddedLike={() => animeAddedLike(anime.id)}\n                animeRemoveLike={() => {\n                  animeCollectionRemove(anime.id);\n                  animeRemoveLike(anime.id);\n                }}\n                animeRemove={() => animeRemove(anime.id)}\n              />\n            ))\n          : animeList\n              .slice(0, quantity)\n              .map((anime) => (\n                <AnimeListItem\n                  key={anime.id}\n                  anime={anime}\n                  animeAddedLike={() => animeAddedLike(anime.id)}\n                  animeRemoveLike={() => animeRemoveLike(anime.id)}\n                  animeRemove={() => animeRemove(anime.id)}\n                />\n              ))}\n      </ul>\n      {isOnCollection ? (\n        <div\n          className={\n            quantity >= filterLikeAnimeList.length\n              ? 'anime-list__more-button-container_type_none'\n              : 'anime-list__more-button-container'\n          }\n        >\n          <button\n            className='anime-list__more-button'\n            aria-label='Показать еще'\n            onClick={incr}\n          >\n            Ещё\n          </button>\n        </div>\n      ) : (\n        <div\n          className={\n            quantity >= animeList.length\n              ? 'anime-list__more-button-container_type_none'\n              : 'anime-list__more-button-container'\n          }\n        >\n          <button\n            className='anime-list__more-button'\n            aria-label='Показать еще'\n            onClick={incr}\n          >\n            Ещё\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n\nconst mapStateToProps = ({\n  animeList,\n  loading,\n  error,\n  quantity,\n  cards,\n  isOnCollection,\n  filterLikeAnimeList,\n}) => {\n  return {\n    animeList,\n    loading,\n    error,\n    quantity,\n    cards,\n    isOnCollection,\n    filterLikeAnimeList,\n  };\n};\n\nconst mapDispatchToProps = {\n  animeLoaded,\n  animeError,\n  animeQuantity,\n  animeAddCards,\n  animeRemoveLike: (id) => animeRemoveLike(id),\n  animeAddedLike: (id) => animeAddedLike(id),\n  animeRemove: (id) => animeRemove(id),\n  animeCollectionRemove: (id) => animeCollectionRemove(id),\n  animeFilterCollection,\n  animeDelFilterCollection,\n};\n\nexport default AnimeServiceWrap()(\n  connect(mapStateToProps, mapDispatchToProps)(AnimeList)\n);\n","\nconst animeLoaded = (newAnime) => {\n  return {\n    type: 'FETCH_ANIME_SUCCESS',\n    payload: newAnime\n  };\n};\n\nconst animeError = (error) => {\n  return {\n    type: 'FETCH_ANIME_FAILURE',\n    payload: error\n  };\n};\n\nconst animeQuantity = (count) => {\n  return {\n    type: 'ANIME_ADD_QUANTITY',\n    payload: count\n  };\n};\n\nconst animeAddCards = (count) => {\n  return {\n    type: 'ANIME_ADD_CARDS',\n    payload: count\n  };\n};\n\nconst animeAddedLike = (animeId, like) => {\n  return {\n    type: 'ANIME_ADD_LIKE',\n    payload: { animeId, like }\n  };\n};\n\nconst animeRemoveLike = (animeId) => {\n  return {\n    type: 'ANIME_REMOVE_LIKE',\n    payload: animeId\n  };\n};\n\nconst animeRemove = (animeId) => {\n  return {\n    type: 'ANIME_REMOVE',\n    payload: animeId\n  };\n};\n\nconst animeCollectionRemove = (animeId) => {\n  return {\n    type: 'ANIME_REMOVE_FROM_COLLECTION',\n    payload: animeId\n  };\n};\n\nconst animeFilterCollection = () => {\n  return {\n    type: 'ANIME_FILTER_COLLECTION',\n  };\n};\n\nconst animeDelFilterCollection = () => {\n  return {\n    type: 'ANIME_DEL_FILTER_COLLECTION',\n  };\n};\n\nexport {\n  animeLoaded,\n  animeError,\n  animeQuantity,\n  animeAddCards,\n  animeAddedLike,\n  animeRemoveLike,\n  animeRemove,\n  animeFilterCollection,\n  animeDelFilterCollection,\n  animeCollectionRemove\n};\n","import { useEffect, useState } from 'react';\r\n\r\nexport default function useWindowSize() {\r\n  const [size, setSize] = useState(0);\r\n  useEffect(() => {\r\n    function updateSize() {\r\n      setSize(window.innerWidth);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\n","export const SHORT_MOVIES = 40;\r\n\r\nexport const LARGE_SCREEN = 1280;\r\n\r\nexport const NARROW_SCREEN = 767;\r\n\r\nexport const LARGE_SCREEN_MOVIES = 9;\r\n\r\nexport const LARGE_SCREEN_MOVIES_MORE = 3;\r\n\r\nexport const MEDIUM_SCREEN_MOVIES = 6;\r\n\r\nexport const MEDIUM_SCREEN_MOVIES_MORE = 2;\r\n\r\nexport const NARROW_SCREEN_MOVIES = 5;\r\n\r\nexport const NARROW_SCREEN_MOVIES_MORE = 2;\r\n","import AnimeList from './AnimeList';\n\nexport default AnimeList;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport Header from '../Header';\nimport AnimeList from '../AnimeList';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <main role='main' className='container'>\n      <Header />\n      <AnimeList />\n    </main>\n  );\n};\n\nexport default App;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../ErrorIndicator';\n\nexport default class ErrorCatch extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}\n","import ErrorCatch from './ErrorCatch';\n\nexport default ErrorCatch;\n","export default class AnimeService {\n  getAnimeList() {\n    return fetch(\n      'https://kitsu.io/api/edge/anime?page[limit]=20&page[offset]=0',\n      {\n        headers: {\n          'Accept': 'application/vnd.api+json',\n          'Content-Type': 'application/vnd.api+json',\n        },\n      }\n    ).then((res) => {\n      if (!res.ok) {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n      return res.json();\n    });\n  }\n}\n","const initialState = {\n  animeList: [],\n  filterLikeAnimeList: [],\n  loading: true,\n  error: null,\n  quantity: null,\n  cards: null,\n  isOnCollection: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_ANIME_SUCCESS':\n      return {\n        ...state,\n        animeList: action.payload,\n        loading: false,\n      };\n\n    case 'FETCH_ANIME_FAILURE':\n      return {\n        ...state,\n        animeList: [],\n        loading: false,\n        error: action.payload,\n      };\n\n    case 'ANIME_ADD_QUANTITY':\n      return {\n        ...state,\n        quantity: action.payload,\n      };\n\n    case 'ANIME_ADD_CARDS':\n      return {\n        ...state,\n        cards: action.payload,\n      };\n\n    case 'ANIME_ADD_LIKE':\n      const { animeId } = action.payload;\n      const animeLiked = state.animeList.find((i) => i.id === animeId);\n      animeLiked.isLiked = true;\n      return {\n        ...state,\n        animeList: [...state.animeList],\n      };\n\n    case 'ANIME_REMOVE_LIKE':\n      const id = action.payload;\n      const anime = state.animeList.find((i) => i.id === id);\n      anime.isLiked = false;\n      return {\n        ...state,\n        animeList: [...state.animeList],\n      };\n\n    case 'ANIME_REMOVE':\n      const itemId = action.payload;\n      const newAnimeList = state.animeList.filter((i) => i.id !== itemId);\n      return {\n        ...state,\n        animeList: [...newAnimeList],\n      };\n\n    case 'ANIME_REMOVE_FROM_COLLECTION':\n      const _id = action.payload;\n      const newfilterLikeAnimeList = state.filterLikeAnimeList.filter(\n        (i) => i.id !== _id\n      );\n      return {\n        ...state,\n        filterLikeAnimeList: [...newfilterLikeAnimeList],\n      };\n\n    case 'ANIME_FILTER_COLLECTION':\n      const filterAnimeList = state.animeList.filter((i) => i.isLiked);\n      return {\n        ...state,\n        filterLikeAnimeList: [...filterAnimeList],\n        isOnCollection: true,\n      };\n\n    case 'ANIME_DEL_FILTER_COLLECTION':\n      return {\n        ...state,\n        isOnCollection: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport ErrorCatch from './components/ErrorCatch';\nimport AnimeService from './services/AnimeService';\nimport { AnimeServiceProvider } from './contexts';\nimport './index.css';\n\nimport store from './store';\n\nconst animeService = new AnimeService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorCatch>\n      <AnimeServiceProvider value={animeService}>\n        <App />\n      </AnimeServiceProvider>\n    </ErrorCatch>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
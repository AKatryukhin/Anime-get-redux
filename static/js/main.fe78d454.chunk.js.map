{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","components/AnimeListItem/index.js","components/AnimeListItem/AnimeListItem.js","contexts/AnimeServiceContext.js","hooks/AnimeServiceWrap.js","components/FilterCheckbox/FilterCheckbox.js","components/FilterCheckbox/index.js","components/Preloader/index.js","components/Preloader/Preloader.js","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.js","components/AnimeList/AnimeList.js","actions/index.js","hooks/useWindowSize.js","utils/constants.js","components/AnimeList/index.js","components/App/index.js","components/App/App.js","components/ErrorCatch/ErrorCatch.js","components/ErrorCatch/index.js","services/AnimeService.js","reducers/index.js","store.js","index.js"],"names":["Header","className","AnimeListItem","anime","animeAddedLike","animeRemoveLike","animeRemove","attributes","canonicalTitle","isLiked","type","onClick","src","posterImage","medium","alt","React","createContext","AnimeServiceProvider","Provider","AnimeServiceConsumer","Consumer","AnimeServiceWrap","Wrapped","props","animeService","FilterCheckbox","animeFilterCollection","animeDelFilterCollection","useState","isChecked","setChecked","name","id","checked","onChange","e","target","Preloader","ErrorIndicator","mapDispatchToProps","animeLoaded","newAnime","payload","animeError","error","animeQuantity","count","animeAddCards","animeId","like","animeCollectionRemove","connect","animeList","loading","quantity","cards","isOnCollection","filterLikeAnimeList","size","setSize","useEffect","updateSize","window","innerWidth","addEventListener","removeEventListener","useWindowSize","incr","getAnimeList","then","res","data","catch","err","slice","map","length","AnimeList","App","role","ErrorCatch","state","hasError","this","setState","children","Component","AnimeService","fetch","headers","ok","json","Promise","reject","status","initialState","reducer","action","animeLiked","find","i","itemId","newAnimeList","filter","_id","newfilterLikeAnimeList","filterAnimeList","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.fe78d454.chunk.js","sourcesContent":["import Header from './Header';\n\nexport default Header;","import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header className='header'>\n      <h1 className='header__title'>Собери свою коллекцию аниме</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import AnimeListItem from './AnimeListItem';\n\nexport default AnimeListItem;\n","import React from 'react';\r\nimport './AnimeListItem.css';\r\n\r\nconst AnimeListItem = ({\r\n  anime,\r\n  animeAddedLike,\r\n  animeRemoveLike,\r\n  animeRemove,\r\n}) => {\r\n  const { attributes } = anime;\r\n  return (\r\n    <li className='card'>\r\n      <div className='card__info-container'>\r\n        <div className='card__header-container'>\r\n          <div className='card__info'>\r\n            <h3 className='card__name'>{attributes.canonicalTitle}</h3>\r\n          </div>\r\n          <div className='card__buttons-container'>\r\n            <button\r\n              className={\r\n                anime.isLiked\r\n                  ? 'card__like-button card__like-button_active'\r\n                  : 'card__like-button'\r\n              }\r\n              type='button'\r\n              aria-label='Кнопка для лайков'\r\n              onClick={anime.isLiked ? animeRemoveLike : animeAddedLike}\r\n            ></button>\r\n            {!anime.isLiked && (\r\n              <button\r\n                className='card__remove-button'\r\n                type='button'\r\n                aria-label='Кнопка для Удаления'\r\n                onClick={animeRemove}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <img\r\n          className='card__image'\r\n          src={attributes.posterImage.medium}\r\n          alt='Картинка'\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default AnimeListItem;\r\n","import React from 'react';\n\nconst {\n  Provider: AnimeServiceProvider,\n  Consumer: AnimeServiceConsumer\n} = React.createContext();\n\nexport {\n  AnimeServiceProvider,\n  AnimeServiceConsumer\n};\n","import React from 'react';\nimport { AnimeServiceConsumer } from '../contexts';\n\nconst AnimeServiceWrap = () => (Wrapped) => {\n  return (props) => {\n    return (\n      <AnimeServiceConsumer>\n        {(animeService) => {\n          return <Wrapped {...props} animeService={animeService} />;\n        }}\n      </AnimeServiceConsumer>\n    );\n  };\n};\n\nexport default AnimeServiceWrap;\n","import React, { useState } from 'react';\r\nimport './FilterCheckbox.css';\r\n\r\nfunction FilterCheckbox({ animeFilterCollection, animeDelFilterCollection }) {\r\n  const [isChecked, setChecked] = useState(false);\r\n  function onChange(event) {\r\n    setChecked(event.target.checked);\r\n    isChecked ? animeDelFilterCollection() : animeFilterCollection();\r\n  }\r\n  return (\r\n    <div className='filter-checkbox'>\r\n      <label className='filter-checkbox__label'>\r\n        <input\r\n          type='checkbox'\r\n          className='filter-checkbox__input'\r\n          name='filterCheckbox'\r\n          id='filterCheckbox'\r\n          checked={isChecked}\r\n          onChange={(e) => onChange(e)}\r\n        />\r\n        <span className='filter-checkbox-visible'></span>\r\n      </label>\r\n      <p className='filter__title'>Коллекция</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterCheckbox;\r\n","import FilterCheckbox from './FilterCheckbox';\n\nexport default FilterCheckbox;","import Preloader from './Preloader';\n\nexport default Preloader;\n","import React from 'react';\r\nimport './Preloader.css';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='preloader'>\r\n      <div className='preloader__container'>\r\n        <span className='preloader__round'></span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import ErrorIndicator from './ErrorIndicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './ErrorIndicator.css';\n\nconst ErrorIndicator = () => {\n  return (\n    <div className='error'>\n      <h2 className='error__title'>Error!</h2>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;\n","import React, { useEffect } from 'react';\r\nimport AnimeListItem from '../AnimeListItem';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './AnimeList.css';\r\nimport { AnimeServiceWrap, useWindowSize } from '../../hooks';\r\nimport {\r\n  animeLoaded,\r\n  animeError,\r\n  animeQuantity,\r\n  animeAddCards,\r\n  animeAddedLike,\r\n  animeRemoveLike,\r\n  animeRemove,\r\n  animeFilterCollection,\r\n  animeDelFilterCollection,\r\n  animeCollectionRemove,\r\n} from '../../actions';\r\nimport FilterCheckbox from '../FilterCheckbox/';\r\nimport Preloader from '../Preloader';\r\nimport ErrorIndicator from '../ErrorIndicator/';\r\n\r\nimport {\r\n  LARGE_SCREEN,\r\n  NARROW_SCREEN,\r\n  LARGE_SCREEN_CARDS,\r\n  LARGE_SCREEN_CARDS_MORE,\r\n  MEDIUM_SCREEN_CARDS,\r\n  MEDIUM_SCREEN_CARDS_MORE,\r\n  NARROW_SCREEN_CARDS,\r\n  NARROW_SCREEN_CARDS_MORE,\r\n} from '../../utils/constants';\r\n\r\nexport function AnimeList(props) {\r\n  const size = useWindowSize();\r\n  const {\r\n    animeQuantity,\r\n    animeAddCards,\r\n    animeAddedLike,\r\n    animeRemoveLike,\r\n    animeRemove,\r\n    animeFilterCollection,\r\n    animeDelFilterCollection,\r\n    animeCollectionRemove,\r\n  } = props;\r\n\r\n  function incr() {\r\n    animeQuantity(quantity + cards);\r\n  }\r\n\r\n  useEffect(() => {\r\n    function getSize() {\r\n      if (size >= LARGE_SCREEN) {\r\n        animeQuantity(LARGE_SCREEN_CARDS);\r\n        animeAddCards(LARGE_SCREEN_CARDS_MORE);\r\n      }\r\n      if (size < LARGE_SCREEN && size > NARROW_SCREEN) {\r\n        animeQuantity(MEDIUM_SCREEN_CARDS);\r\n        animeAddCards(MEDIUM_SCREEN_CARDS_MORE);\r\n      }\r\n      if (size <= NARROW_SCREEN) {\r\n        animeQuantity(NARROW_SCREEN_CARDS);\r\n        animeAddCards(NARROW_SCREEN_CARDS_MORE);\r\n      }\r\n    }\r\n    getSize();\r\n  }, [size]);\r\n\r\n  useEffect(() => {\r\n    const { animeService, animeLoaded, animeError } = props;\r\n    animeService\r\n      .getAnimeList()\r\n      .then((res) => animeLoaded(res.data))\r\n      .catch((err) => animeError(err));\r\n  }, []);\r\n\r\n  const {\r\n    animeList,\r\n    loading,\r\n    error,\r\n    quantity,\r\n    cards,\r\n    isOnCollection,\r\n    filterLikeAnimeList,\r\n  } = props;\r\n\r\n  return (\r\n    <main className='content'>\r\n      <div className='content__checkbox-container'>\r\n        <FilterCheckbox\r\n          animeFilterCollection={animeFilterCollection}\r\n          animeDelFilterCollection={animeDelFilterCollection}\r\n        />\r\n      </div>\r\n      {loading && <Preloader />}\r\n      {error && <ErrorIndicator />}\r\n      <ul className='anime-list'>\r\n        {isOnCollection\r\n          ? filterLikeAnimeList.slice(0, quantity).map((anime) => (\r\n              <AnimeListItem\r\n                key={anime.id}\r\n                anime={anime}\r\n                animeAddedLike={() => animeAddedLike(anime.id)}\r\n                animeRemoveLike={() => {\r\n                  animeCollectionRemove(anime.id);\r\n                  animeRemoveLike(anime.id);\r\n                }}\r\n                animeRemove={() => animeRemove(anime.id)}\r\n              />\r\n            ))\r\n          : animeList\r\n              .slice(0, quantity)\r\n              .map((anime) => (\r\n                <AnimeListItem\r\n                  key={anime.id}\r\n                  anime={anime}\r\n                  animeAddedLike={() => animeAddedLike(anime.id)}\r\n                  animeRemoveLike={() => animeRemoveLike(anime.id)}\r\n                  animeRemove={() => animeRemove(anime.id)}\r\n                />\r\n              ))}\r\n      </ul>\r\n      {isOnCollection ? (\r\n        <div\r\n          className={\r\n            quantity >= filterLikeAnimeList.length\r\n              ? 'anime-list__more-button-container_type_none'\r\n              : 'anime-list__more-button-container'\r\n          }\r\n        >\r\n          <button\r\n            className='anime-list__more-button'\r\n            aria-label='Показать еще'\r\n            onClick={incr}\r\n          >\r\n            Ещё\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={\r\n            quantity >= animeList.length\r\n              ? 'anime-list__more-button-container_type_none'\r\n              : 'anime-list__more-button-container'\r\n          }\r\n        >\r\n          <button\r\n            className='anime-list__more-button'\r\n            aria-label='Показать еще'\r\n            onClick={incr}\r\n          >\r\n            Ещё\r\n          </button>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  animeList,\r\n  loading,\r\n  error,\r\n  quantity,\r\n  cards,\r\n  isOnCollection,\r\n  filterLikeAnimeList,\r\n}) => {\r\n  return {\r\n    animeList,\r\n    loading,\r\n    error,\r\n    quantity,\r\n    cards,\r\n    isOnCollection,\r\n    filterLikeAnimeList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  animeLoaded,\r\n  animeError,\r\n  animeQuantity,\r\n  animeAddCards,\r\n  animeRemoveLike: (id) => animeRemoveLike(id),\r\n  animeAddedLike: (id) => animeAddedLike(id),\r\n  animeRemove: (id) => animeRemove(id),\r\n  animeCollectionRemove: (id) => animeCollectionRemove(id),\r\n  animeFilterCollection,\r\n  animeDelFilterCollection,\r\n};\r\n\r\nexport default AnimeServiceWrap()(\r\n  connect(mapStateToProps, mapDispatchToProps)(AnimeList)\r\n);\r\n","\nconst animeLoaded = (newAnime) => {\n  return {\n    type: 'FETCH_ANIME_SUCCESS',\n    payload: newAnime\n  };\n};\n\nconst animeError = (error) => {\n  return {\n    type: 'FETCH_ANIME_FAILURE',\n    payload: error\n  };\n};\n\nconst animeQuantity = (count) => {\n  return {\n    type: 'ANIME_ADD_QUANTITY',\n    payload: count\n  };\n};\n\nconst animeAddCards = (count) => {\n  return {\n    type: 'ANIME_ADD_CARDS',\n    payload: count\n  };\n};\n\nconst animeAddedLike = (animeId, like) => {\n  return {\n    type: 'ANIME_ADD_LIKE',\n    payload: { animeId, like }\n  };\n};\n\nconst animeRemoveLike = (animeId) => {\n  return {\n    type: 'ANIME_REMOVE_LIKE',\n    payload: animeId\n  };\n};\n\nconst animeRemove = (animeId) => {\n  return {\n    type: 'ANIME_REMOVE',\n    payload: animeId\n  };\n};\n\nconst animeCollectionRemove = (animeId) => {\n  return {\n    type: 'ANIME_REMOVE_FROM_COLLECTION',\n    payload: animeId\n  };\n};\n\nconst animeFilterCollection = () => {\n  return {\n    type: 'ANIME_FILTER_COLLECTION',\n  };\n};\n\nconst animeDelFilterCollection = () => {\n  return {\n    type: 'ANIME_DEL_FILTER_COLLECTION',\n  };\n};\n\nexport {\n  animeLoaded,\n  animeError,\n  animeQuantity,\n  animeAddCards,\n  animeAddedLike,\n  animeRemoveLike,\n  animeRemove,\n  animeFilterCollection,\n  animeDelFilterCollection,\n  animeCollectionRemove\n};\n","import { useEffect, useState } from 'react';\r\n\r\nexport default function useWindowSize() {\r\n  const [size, setSize] = useState(0);\r\n  useEffect(() => {\r\n    function updateSize() {\r\n      setSize(window.innerWidth);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\n","\r\nexport const LARGE_SCREEN = 1280;\r\n\r\nexport const NARROW_SCREEN = 767;\r\n\r\nexport const LARGE_SCREEN_CARDS = 9;\r\n\r\nexport const LARGE_SCREEN_CARDS_MORE = 3;\r\n\r\nexport const MEDIUM_SCREEN_CARDS = 6;\r\n\r\nexport const MEDIUM_SCREEN_CARDS_MORE = 2;\r\n\r\nexport const NARROW_SCREEN_CARDS = 5;\r\n\r\nexport const NARROW_SCREEN_CARDS_MORE = 2;\r\n","import AnimeList from './AnimeList';\n\nexport default AnimeList;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport Header from '../Header';\nimport AnimeList from '../AnimeList';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <main role='main' className='container'>\n      <Header />\n      <AnimeList />\n    </main>\n  );\n};\n\nexport default App;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../ErrorIndicator';\n\nexport default class ErrorCatch extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}\n","import ErrorCatch from './ErrorCatch';\n\nexport default ErrorCatch;\n","export default class AnimeService {\n  getAnimeList() {\n    return fetch(\n      'https://kitsu.io/api/edge/anime?page[limit]=20&page[offset]=0',\n      {\n        headers: {\n          'Accept': 'application/vnd.api+json',\n          'Content-Type': 'application/vnd.api+json',\n        },\n      }\n    ).then((res) => {\n      if (!res.ok) {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n      return res.json();\n    });\n  }\n}\n","const initialState = {\n  animeList: [],\n  filterLikeAnimeList: [],\n  loading: true,\n  error: null,\n  quantity: null,\n  cards: null,\n  isOnCollection: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_ANIME_SUCCESS':\n      return {\n        ...state,\n        animeList: action.payload,\n        loading: false,\n      };\n\n    case 'FETCH_ANIME_FAILURE':\n      return {\n        ...state,\n        animeList: [],\n        loading: false,\n        error: action.payload,\n      };\n\n    case 'ANIME_ADD_QUANTITY':\n      return {\n        ...state,\n        quantity: action.payload,\n      };\n\n    case 'ANIME_ADD_CARDS':\n      return {\n        ...state,\n        cards: action.payload,\n      };\n\n    case 'ANIME_ADD_LIKE':\n      const { animeId } = action.payload;\n      const animeLiked = state.animeList.find((i) => i.id === animeId);\n      animeLiked.isLiked = true;\n      return {\n        ...state,\n        animeList: [...state.animeList],\n      };\n\n    case 'ANIME_REMOVE_LIKE':\n      const id = action.payload;\n      const anime = state.animeList.find((i) => i.id === id);\n      anime.isLiked = false;\n      return {\n        ...state,\n        animeList: [...state.animeList],\n      };\n\n    case 'ANIME_REMOVE':\n      const itemId = action.payload;\n      const newAnimeList = state.animeList.filter((i) => i.id !== itemId);\n      return {\n        ...state,\n        animeList: [...newAnimeList],\n      };\n\n    case 'ANIME_REMOVE_FROM_COLLECTION':\n      const _id = action.payload;\n      const newfilterLikeAnimeList = state.filterLikeAnimeList.filter(\n        (i) => i.id !== _id\n      );\n      return {\n        ...state,\n        filterLikeAnimeList: [...newfilterLikeAnimeList],\n      };\n\n    case 'ANIME_FILTER_COLLECTION':\n      const filterAnimeList = state.animeList.filter((i) => i.isLiked);\n      return {\n        ...state,\n        filterLikeAnimeList: [...filterAnimeList],\n        isOnCollection: true,\n      };\n\n    case 'ANIME_DEL_FILTER_COLLECTION':\n      return {\n        ...state,\n        isOnCollection: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport ErrorCatch from './components/ErrorCatch';\nimport AnimeService from './services/AnimeService';\nimport { AnimeServiceProvider } from './contexts';\nimport './index.css';\n\nimport store from './store';\n\nconst animeService = new AnimeService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorCatch>\n      <AnimeServiceProvider value={animeService}>\n        <App />\n      </AnimeServiceProvider>\n    </ErrorCatch>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}